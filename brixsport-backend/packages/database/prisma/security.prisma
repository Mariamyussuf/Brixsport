// =============================================================================
// SECURITY MODELS
// =============================================================================

model UserSecurity {
  id                String    @id @default(uuid())
  userId           String    @unique
  failedLoginCount Int       @default(0)
  lastFailedLogin  DateTime?
  lockoutUntil     DateTime?
  passwordHistory  String[]  // Store hashed passwords
  securityQuestions Json?
  user             User      @relation(fields: [userId], references: [id])

  @@index([userId])
}

model MFASettings {
  id              String    @id @default(uuid())
  userId          String    @unique
  enabled         Boolean   @default(false)
  method          String    @default("app") // "app", "sms", "email"
  secret          String?   // For TOTP
  backupCodes     String[]
  verifiedAt      DateTime?
  user            User      @relation(fields: [userId], references: [id])

  @@index([userId])
}

model SecurityEvent {
  id        String   @id @default(uuid())
  userId    String
  eventType String   // "login", "password_change", "mfa_enabled", etc.
  ip        String?
  userAgent String?
  metadata  Json?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([eventType])
  @@index([createdAt])
}

model SecurityAlert {
  id          String   @id @default(uuid())
  userId      String
  alertType   String
  message     String
  severity    String   @default("info") // "info", "warning", "critical"
  metadata    Json?
  createdAt   DateTime @default(now())
  resolvedAt  DateTime?
  user        User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([alertType])
  @@index([createdAt])
}